import { NestFactory } from '@nestjs/core';
import { Module } from '@nestjs/common';
import { GraphQLModule } from '@nestjs/graphql';
import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';
import { ConfigModule } from '@nestjs/config';
import { GEOModule } from './modules/geo/geo.module';

@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true,
      envFilePath: '.env'
    }),
    GraphQLModule.forRoot<ApolloDriverConfig>({
      driver: ApolloDriver,
      autoSchemaFile: true,
      playground: true,
      introspection: true,
      context: () => ({}),
    }),
    GEOModule
  ]
})
class GEOTestModule {}

async function bootstrap() {
  console.log('üöÄ ÂêØÂä® Eufy GEO3 Ê†∏ÂøÉÊúçÂä°...');
  
  const app = await NestFactory.create(GEOTestModule);
  
  // ÂêØÁî®CORS
  app.enableCors({
    origin: ['http://localhost:3000', 'http://localhost:4007'],
    credentials: true,
  });

  const port = 4007;
  await app.listen(port);

  console.log(`üî• GEO3 Ê†∏ÂøÉÊúçÂä°Â∑≤ÂêØÂä®ÔºÅ`);
  console.log(`üìä GraphQL Playground: http://localhost:${port}/graphql`);
  console.log(`üéØ ÊúçÂä°ÂäüËÉΩ:`);
  console.log(`   ‚Ä¢ GEOÂÜÖÂÆπ‰ºòÂåñÂºïÊìé`);
  console.log(`   ‚Ä¢ AIÂºïÁî®ÂÆûÊó∂ÁõëÊµã`);
  console.log(`   ‚Ä¢ FAQÊô∫ËÉΩÈáçÊûÑÁ≥ªÁªü`);
  console.log(`   ‚Ä¢ AIÂºïÊìéÂÖºÂÆπÊÄßËØÑ‰º∞`);
  console.log('');
  console.log('üìù ÂèØÁî®Êü•ËØ¢Á§∫‰æã:');
  console.log('   query { geoStatus }');
  console.log('   query { geoHealthCheck }');
  console.log('   query { geoCapabilities }');
  console.log('   query { getAICitationInsights }');
  console.log('');
  console.log('üí° ÂèØÁî®ÂèòÊõ¥Á§∫‰æã:');
  console.log('   mutation { optimizeContentForGEO(...) }');
  console.log('   mutation { optimizeFAQsForGEO(...) }');
}

bootstrap().catch(error => {
  console.error('‚ùå GEOÊúçÂä°ÂêØÂä®Â§±Ë¥•:', error);
  process.exit(1);
});